{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#welcome-the-ml-engineers-blog","title":"Welcome the ML Engineer's Blog","text":""},{"location":"#about-me","title":"About me:","text":"I'm a Machine Learning Engineer. My work encompasses the design of machine learning algorithms and natural language processing (NLP) in a variety of contexts, from industry to academic research. Specialized in Artificial Intelligence, I also hold a Master's degree in Cognitive Sciences and more specifically in Cognitive Dynamics.   <p>My CV</p> <p> </p> Tools Language Environments IoT Machine Learning &amp; AI Libraries Scientific Writing &amp; Documentation <p> </p>"},{"location":"#i-worked-for","title":"<p> I worked for </p>","text":""},{"location":"phylosophy/","title":"Philosophy","text":""},{"location":"phylosophy/#ma-philosophie-technique","title":"Ma Philosophie Technique :","text":"<p>Dans un monde technologique qui \u00e9volue \u00e0 une vitesse vertigineuse, il est facile de se laisser happer par des solutions toujours plus complexes, au d\u00e9triment de la simplicit\u00e9 et de la robustesse. Ma philosophie technique repose sur une approche sto\u00efcienne : pragmatisme, r\u00e9silience, frugalit\u00e9 et une qu\u00eate permanente d\u2019efficacit\u00e9 dans les environnements exigeants. L\u2019objectif n\u2019est pas de suivre la derni\u00e8re tendance, mais d\u2019optimiser les ressources pour un impact maximal.</p>"},{"location":"phylosophy/#1-pragmatisme-minimalisme-technologique","title":"1. Pragmatisme &amp; Minimalisme Technologique","text":"<p>L\u2019excellence technique ne r\u00e9side pas dans la sophistication, mais dans la robustesse et l\u2019efficacit\u00e9. Dans des environnements contraints, que ce soit en recherche et d\u00e9veloppement ou dans des situations critiques, la priorit\u00e9 est donn\u00e9e aux solutions \u00e9prouv\u00e9es et \u00e9pur\u00e9es. Pourquoi utiliser un mod\u00e8le d\u2019IA surdimensionn\u00e9 si un algorithme heuristique fait aussi bien ? Pourquoi empiler des couches logicielles inutiles quand un script optimis\u00e9 suffit ?</p> <p>Le minimalisme technologique s\u2019inspire directement des principes sto\u00efciens : se concentrer sur l\u2019essentiel, \u00e9viter l\u2019inutile et privil\u00e9gier ce qui fonctionne de mani\u00e8re fiable sur le long terme.</p>"},{"location":"phylosophy/#2-esprit-critique-remise-en-question-permanente","title":"2. Esprit Critique &amp; Remise en Question Permanente","text":"<p>Dans un milieu o\u00f9 l\u2019innovation est omnipr\u00e9sente, il est facile de tomber dans le pi\u00e8ge du suivisme aveugle. Or, toute avanc\u00e9e technologique doit \u00eatre confront\u00e9e \u00e0 une \u00e9valuation rigoureuse :</p> <ul> <li> <p>Est-ce r\u00e9ellement un progr\u00e8s ou simplement un effet de mode ?</p> </li> <li> <p>Cette technologie r\u00e9siste-t-elle \u00e0 l\u2019\u00e9preuve du temps et aux contraintes r\u00e9elles ?</p> </li> <li> <p>Est-elle applicable dans un cadre exigeant sans superflu ni surcharge ?</p> </li> </ul> <p>Adopter une approche pragmatique et rationnelle permet d\u2019\u00e9viter l\u2019\u00e9cueil des fausses promesses et des solutions th\u00e9oriques inadapt\u00e9es \u00e0 la r\u00e9alit\u00e9 du terrain.</p>"},{"location":"phylosophy/#3-low-tech-resilience-dans-les-environnements-contraints","title":"3. Low-Tech &amp; R\u00e9silience dans les Environnements Contraints","text":"<p>L\u2019approche low-tech ne signifie pas rejeter la technologie, mais choisir des solutions durables, compr\u00e9hensibles et r\u00e9parables. Dans le domaine de la recherche et du d\u00e9veloppement, cela implique d\u2019opter pour des syst\u00e8mes modulaires, r\u00e9duisant la d\u00e9pendance aux infrastructures complexes.</p> <p>Que ce soit en machine learning, en d\u00e9veloppement logiciel ou en ing\u00e9nierie, une solution doit pouvoir fonctionner dans un environnement d\u00e9grad\u00e9, sans acc\u00e8s constant aux ressources modernes. Cela se traduit par :</p> <ul> <li> <p>Des algorithmes optimis\u00e9s et \u00e9conomes en ressources</p> </li> <li> <p>Des infrastructures all\u00e9g\u00e9es et autonomes</p> </li> <li> <p>Une capacit\u00e9 \u00e0 travailler avec des outils limit\u00e9s tout en maintenant des performances \u00e9lev\u00e9es</p> </li> </ul> <p>La robustesse est toujours pr\u00e9f\u00e9rable \u00e0 l\u2019innovation superflue.</p>"},{"location":"phylosophy/#4-responsabilite-ethique-dans-la-conception","title":"4. Responsabilit\u00e9 &amp; \u00c9thique dans la Conception","text":"<p>Le d\u00e9veloppement technologique implique une responsabilit\u00e9 forte. Le sto\u00efcisme enseigne la discipline et la ma\u00eetrise de soi, des qualit\u00e9s essentielles pour un ing\u00e9nieur qui doit concevoir avec discernement. Chaque ligne de code, chaque mod\u00e8le d\u00e9velopp\u00e9 doit \u00eatre r\u00e9fl\u00e9chi en termes d\u2019impact r\u00e9el et d\u2019\u00e9thique.</p> <p>Dans un environnement exigeant, une erreur de conception peut avoir des cons\u00e9quences lourdes. Travailler avec rigueur et responsabilit\u00e9, c\u2019est s\u2019assurer que chaque solution mise en \u0153uvre est non seulement efficace, mais aussi durable et ma\u00eetris\u00e9e.</p>"},{"location":"phylosophy/#5-adaptabilite-rigueur-cles-du-milieu-exigeant","title":"5. Adaptabilit\u00e9 &amp; Rigueur : Cl\u00e9s du Milieu Exigeant","text":"<p>L\u2019adaptabilit\u00e9 est essentielle pour \u00e9voluer dans un environnement incertain. Loin des promesses de l\u2019innovation d\u00e9brid\u00e9e, la v\u00e9ritable comp\u00e9tence r\u00e9side dans la capacit\u00e9 \u00e0 s\u2019ajuster aux contraintes avec ing\u00e9niosit\u00e9.</p> <p>L\u2019approche sto\u00efcienne appliqu\u00e9e \u00e0 la technique implique :</p> <ul> <li> <p>Une discipline de travail rigoureuse et m\u00e9thodique</p> </li> <li> <p>Une r\u00e9silience face aux \u00e9checs et une capacit\u00e9 \u00e0 apprendre continuellement</p> </li> <li> <p>Une recherche constante d\u2019optimisation et d\u2019am\u00e9lioration des solutions existantes</p> </li> </ul> <p>Le but n\u2019est pas d\u2019adopter la technologie la plus avanc\u00e9e, mais celle qui offre le meilleur compromis entre efficacit\u00e9, simplicit\u00e9 et robustesse.</p>"},{"location":"phylosophy/#conclusion","title":"Conclusion","text":"<p>Ma philosophie technique se r\u00e9sume en quelques principes : pragmatisme, minimalisme, esprit critique et adaptabilit\u00e9. Dans un contexte de recherche et d\u00e9veloppement, ou dans des environnements exigeants, il est vital de ne pas succomber \u00e0 la complexit\u00e9 inutile et de privil\u00e9gier des solutions low-tech efficaces et r\u00e9silientes.</p> <p>La technique doit \u00eatre au service de la finalit\u00e9, et non une fin en soi. Construire des syst\u00e8mes robustes et durables, s\u2019adapter aux contraintes r\u00e9elles et toujours chercher \u00e0 simplifier plut\u00f4t qu\u2019\u00e0 complexifier, telle est ma vision d\u2019une ing\u00e9nierie utile et ma\u00eetris\u00e9e.</p>"},{"location":"basics/","title":"The basics to master","text":""},{"location":"basics/maths/bases/","title":"Partie 1: Bases Math\u00e9matiques Fondamentales","text":"<p>Les math\u00e9matiques sont un pilier essentiel de nombreux domaines scientifiques et technologiques, notamment l'intelligence artificielle, la physique, l'\u00e9conomie et l'ing\u00e9nierie. J'ai pu remarquer au cours de mon d\u00e9but de carriere que la ma\u00eetrise des math\u00e9matiques est essentielle pour comprendre et utiliser efficacement les algorithmes d'IA, cependant trop peu de personnes connaissent ces bases. Ce document pr\u00e9sente donc les bases math\u00e9matiques fondamentales, rien de trop compliqu\u00e9. N'h\u00e9sitez pas \u00e0 les revoir si vous avez besoin de rafra\u00eechir vos connaissances ou \u00e0 approfondir certains concepts.</p>"},{"location":"basics/maths/bases/#1-algebre-lineaire","title":"1. Alg\u00e8bre Lin\u00e9aire","text":"<p>L'alg\u00e8bre lin\u00e9aire est l'\u00e9tude des vecteurs, des matrices et des espaces vectoriels.</p>"},{"location":"basics/maths/bases/#11-vecteurs","title":"1.1 Vecteurs","text":"<p>Un vecteur est une liste ordonn\u00e9e de nombres repr\u00e9sentant des grandeurs scalaires dans un espace multidimensionnel. Il est utilis\u00e9 pour mod\u00e9liser des quantit\u00e9s physiques et abstraites.</p> <p>Un vecteur \\(\\mathbf{v}\\) en dimension \\(n\\) s'\u00e9crit :</p> \\[ \\mathbf{v} =  \\begin{bmatrix}  v_1 \\\\ v_2 \\\\ \\vdots \\\\  v_n  \\end{bmatrix} \\]"},{"location":"basics/maths/bases/#12-matrices","title":"1.2 Matrices","text":"<p>Une matrice est un tableau de nombres organis\u00e9s en lignes et colonnes. Elle est employ\u00e9e pour repr\u00e9senter des syst\u00e8mes d'\u00e9quations lin\u00e9aires, des transformations et des relations entre variables.</p> <p>Une matrice \\(A\\) de taille \\(m \\times n\\) est d\u00e9finie comme :</p> \\[ A =  \\begin{bmatrix} a_{11} &amp; a_{12} &amp; \\dots &amp; a_{1n} \\\\ a_{21} &amp; a_{22} &amp; \\dots &amp; a_{2n} \\\\  \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\  a_{m1} &amp; a_{m2} &amp; \\dots &amp; a_{mn}  \\end{bmatrix} \\]"},{"location":"basics/maths/bases/#13-operations-sur-les-matrices","title":"1.3 Op\u00e9rations sur les matrices","text":"<p>L'addition de deux matrices \\(A\\) et \\(B\\) est d\u00e9finie par :</p> \\[ (A + B)_{ij} = A_{ij} + B_{ij} \\] <p>Le produit matriciel \\(C = A \\cdot B\\) est d\u00e9fini par :</p> \\[ C_{ij} = \\sum_{k=1}^{n} A_{ik} B_{kj} \\]"},{"location":"basics/maths/bases/#2-calcul-differentiel","title":"2. Calcul Diff\u00e9rentiel","text":"<p>Le calcul diff\u00e9rentiel concerne l'\u00e9tude des taux de variation des fonctions.</p>"},{"location":"basics/maths/bases/#21-derivee","title":"2.1 D\u00e9riv\u00e9e","text":"<p>La d\u00e9riv\u00e9e d'une fonction \\(f(x)\\) est d\u00e9finie comme la limite :</p> \\[ f'(x) = \\lim_{h \\to 0} \\frac{f(x + h) - f(x)}{h} \\]"},{"location":"basics/maths/bases/#22-gradient","title":"2.2 Gradient","text":"<p>Le gradient d'une fonction \\(f(x, y)\\) est le vecteur des d\u00e9riv\u00e9es partielles :</p> \\[ \\nabla f = \\begin{bmatrix} \\frac{\\partial f}{\\partial x} \\\\ \\frac{\\partial f}{\\partial y} \\end{bmatrix} \\]"},{"location":"basics/maths/bases/#3-probabilites-et-statistiques","title":"3. Probabilit\u00e9s et Statistiques","text":"<p>Ces disciplines sont essentielles pour mod\u00e9liser l'incertitude et analyser des ensembles de donn\u00e9es.</p>"},{"location":"basics/maths/bases/#31-loi-des-probabilites","title":"3.1 Loi des Probabilit\u00e9s","text":"<p>Une loi de probabilit\u00e9 d\u00e9finit la r\u00e9partition des \u00e9v\u00e9nements al\u00e9atoires et leur probabilit\u00e9 d'occurrence.</p> <p>La probabilit\u00e9 d'un \u00e9v\u00e9nement \\(A\\) est d\u00e9finie par :</p> \\[ P(A) = \\frac{\\text{nombre de cas favorables}}{\\text{nombre total de cas possibles}} \\]"},{"location":"basics/maths/bases/#32-esperance-et-variance","title":"3.2 Esp\u00e9rance et Variance","text":"<p>L'esp\u00e9rance math\u00e9matique d'une variable al\u00e9atoire \\(X\\) est donn\u00e9e par :</p> \\[ E[X] = \\sum_{i} x_i P(x_i) \\] <p>La variance est d\u00e9finie comme :</p> \\[ Var(X) = E[(X - E[X])^2] \\]"},{"location":"basics/maths/bases/#4-optimisation-et-descente-de-gradient","title":"4. Optimisation et Descente de Gradient","text":"<p>L'optimisation vise \u00e0 trouver les valeurs des param\u00e8tres qui minimisent ou maximisent une fonction objective.</p>"},{"location":"basics/maths/bases/#41-fonction-de-cout","title":"4.1 Fonction de Co\u00fbt","text":"<p>Une fonction de co\u00fbt \\(J(\\theta)\\) mesure l'erreur entre les pr\u00e9dictions d'un mod\u00e8le et les valeurs r\u00e9elles.</p>"},{"location":"basics/maths/bases/#42-algorithme-de-descente-de-gradient","title":"4.2 Algorithme de Descente de Gradient","text":"<p>La descente de gradient met \u00e0 jour les param\u00e8tres \\(\\theta\\) selon la r\u00e8gle :</p> \\[ \\theta := \\theta - \\alpha \\nabla J(\\theta) \\] <p>o\u00f9 \\(\\alpha\\) est le taux d'apprentissage.</p>"},{"location":"basics/maths/bases/#conclusion","title":"Conclusion","text":"<p>Ces bases math\u00e9matiques constituent le socle de nombreuses applications en data science et en machine learning. Une bonne compr\u00e9hension de ces concepts permet d'analyser et de r\u00e9soudre efficacement divers probl\u00e8mes complexes.</p>"},{"location":"basics/maths/bases2/","title":"Partie 2 : Concepts Avanc\u00e9s","text":""},{"location":"basics/maths/bases2/#5-espaces-vectoriels-et-transformations-lineaires","title":"5. Espaces Vectoriels et Transformations Lin\u00e9aires","text":"<p>Un espace vectoriel est un ensemble de vecteurs avec des op\u00e9rations d'addition et de multiplication scalaire respectant certaines propri\u00e9t\u00e9s.</p> <p>Une transformation lin\u00e9aire \\(T\\) appliqu\u00e9e \u00e0 un vecteur \\(\\mathbf{v}\\) est d\u00e9finie par :</p> <p>$$ T(\\mathbf{v}) = A \\mathbf{v} $$ o\u00f9 \\(A\\) est une matrice de transformation.</p>"},{"location":"basics/maths/bases2/#6-series-de-fourier","title":"6. S\u00e9ries de Fourier","text":"<p>Les s\u00e9ries de Fourier permettent de repr\u00e9senter une fonction p\u00e9riodique comme une somme de sinus et cosinus. (Indispensable pour le traitement du signal)</p> <p>Une fonction \\(f(x)\\) peut s'exprimer comme :</p> \\[ f(x) = a_0 + \\sum_{n=1}^{\\infty} \\left( a_n \\cos(n x) + b_n \\sin(n x) \\right) \\]"},{"location":"basics/maths/bases2/#7-algebre-tensorielle","title":"7. Alg\u00e8bre Tensorielle","text":"<p>Les tenseurs sont une g\u00e9n\u00e9ralisation des vecteurs et matrices. Ils sont largement utilis\u00e9s dans l'intelligence artificielle, notamment dans les r\u00e9seaux de neurones. Par exemple, une matrice \\(A\\) est un tenseur de rang 2, un vecteur \\(v\\) est un tenseur de rang 1, et un scalaire est un tenseur de rang 0.</p> <p>Un tenseur \\(T\\) est une structure multi-dimensionnelle repr\u00e9sent\u00e9e par :</p> \\[ T_{ijk} \\text{ avec } i, j, k \\text{ indices} \\]"},{"location":"basics/maths/bases2/#8-equations-differentielles","title":"8. \u00c9quations Diff\u00e9rentielles","text":"<p>Les \u00e9quations diff\u00e9rentielles d\u00e9crivent l'\u00e9volution d'un syst\u00e8me dynamique.</p> <p>Une \u00e9quation diff\u00e9rentielle ordinaire (EDO) de premier ordre est donn\u00e9e par :</p> \\[ \\frac{dy}{dx} = f(x, y) \\] <p>Pr\u00e9sent\u00e9es de cette mani\u00e8re, elles peuvent sembler impressionnantes et complexes. Cependant, il s\u2019agit simplement d\u2019une mani\u00e8re formelle de d\u00e9crire comment une quantit\u00e9 \u00e9volue en fonction d\u2019une autre. En pratique, elles traduisent des ph\u00e9nom\u00e8nes courants comme le refroidissement d\u2019un caf\u00e9, la chute d\u2019un objet ou la croissance d\u2019une population. Une fois bien comprises, elles deviennent un outil puissant et intuitif pour mod\u00e9liser le monde qui nous entoure.</p> <p>Prenons ici un exemple concret et simple d\u2019\u00e9quation diff\u00e9rentielle est la loi du refroidissement de Newton.</p> <p>Imaginons qu\u2019une tasse de caf\u00e9 chaud soit laiss\u00e9e dans une pi\u00e8ce \u00e0 temp\u00e9rature ambiante. Son refroidissement peut \u00eatre mod\u00e9lis\u00e9 par l\u2019\u00e9quation diff\u00e9rentielle suivante :</p> <p>o\u00f9 :</p> <ul> <li>\\(T(t)\\) est la temp\u00e9rature du caf\u00e9 \u00e0 l\u2019instant \ufffc,</li> <li>\\(T_{amb}\\) est la temp\u00e9rature ambiante de la pi\u00e8ce,</li> <li>\\(k\\) est une constante positive qui d\u00e9pend du mat\u00e9riau et des conditions de l\u2019air,</li> <li>\\(\\frac{dT}{dt}\\) est la vitesse de refroidissement du caf\u00e9.</li> </ul> <p>Interpr\u00e9tation intuitive :</p> <ul> <li>Plus la diff\u00e9rence \\(T(t) - T_{amb}\\) est grande, plus le caf\u00e9 refroidit rapidement.</li> <li>\u00c0 mesure que \\(T\\) se rapproche de \\(T_{amb}\\), la vitesse de refroidissement diminue.</li> <li>Ce mod\u00e8le simple permet de pr\u00e9dire combien de temps il faudra pour que le caf\u00e9 atteigne une temp\u00e9rature agr\u00e9able \u00e0 boire.</li> </ul> <p>Pas si compliqu\u00e9 non ?</p>"},{"location":"basics/maths/bases2/#conclusion","title":"Conclusion","text":"<p>Cette seconde partie approfondit les concepts math\u00e9matiques utilis\u00e9s dans des domaines avanc\u00e9s comme l'intelligence artificielle, la physique et l'analyse des signaux. La ma\u00eetrise de ces notions permet d'aborder des probl\u00e8mes complexes avec rigueur et efficacit\u00e9.</p>"},{"location":"basics/python/math_python/","title":"Bases Math\u00e9matiques pour l'IA","text":"<p>Voici un aper\u00e7u des notions essentielles utilis\u00e9es dans le domaine. C'est ce qu'on utilise 99% du temps.</p>"},{"location":"basics/python/math_python/#1-algebre-lineaire","title":"1. Alg\u00e8bre Lin\u00e9aire","text":"<p>L'alg\u00e8bre lin\u00e9aire est au c\u0153ur des algorithmes d'IA, notamment pour la manipulation des donn\u00e9es et l'entra\u00eenement des mod\u00e8les.</p>"},{"location":"basics/python/math_python/#11-vecteurs","title":"1.1 Vecteurs","text":"<p>Un vecteur est une liste ordonn\u00e9e de nombres.</p> <pre><code>import numpy as np\nv = np.array([1, 2, 3])  # Vecteur 3D\nprint(v)\n</code></pre>"},{"location":"basics/python/math_python/#12-matrices","title":"1.2 Matrices","text":"<p>Une matrice est une collection bidimensionnelle de nombres.</p> <pre><code>M = np.array([[1, 2], [3, 4]])  # Matrice 2x2\nprint(M)\n</code></pre>"},{"location":"basics/python/math_python/#13-operations","title":"1.3 Op\u00e9rations","text":"<pre><code>v1 = np.array([1, 2, 3])\nv2 = np.array([4, 5, 6])\nprint(v1 + v2)  # Addition\nprint(np.dot(v1, v2))  # Produit scalaire\n</code></pre>"},{"location":"basics/python/math_python/#2-calcul-differentiel","title":"2. Calcul Diff\u00e9rentiel","text":"<p>Le calcul diff\u00e9rentiel est essentiel pour l'optimisation des mod\u00e8les d'IA, notamment dans l'entra\u00eenement des r\u00e9seaux de neurones.</p>"},{"location":"basics/python/math_python/#21-derivee","title":"2.1 D\u00e9riv\u00e9e","text":"<p>La d\u00e9riv\u00e9e mesure le taux de variation d'une fonction.</p> <pre><code>import sympy as sp\nx = sp.Symbol('x')\nf = x**2\nderivative = sp.diff(f, x)\nprint(derivative)  # R\u00e9sultat : 2*x\n</code></pre>"},{"location":"basics/python/math_python/#22-gradient","title":"2.2 Gradient","text":"<p>Le gradient est une g\u00e9n\u00e9ralisation de la d\u00e9riv\u00e9e pour les fonctions multivariables.</p> <pre><code>x, y = sp.symbols('x y')\nf = x**2 + y**2\ngrad = [sp.diff(f, var) for var in (x, y)]\nprint(grad)  # R\u00e9sultat : [2*x, 2*y]\n</code></pre>"},{"location":"basics/python/math_python/#3-probabilites-et-statistiques","title":"3. Probabilit\u00e9s et Statistiques","text":"<p>Les mod\u00e8les d'IA reposent souvent sur des concepts probabilistes.</p>"},{"location":"basics/python/math_python/#31-loi-des-probabilites","title":"3.1 Loi des Probabilit\u00e9s","text":"<pre><code>from scipy.stats import norm\nmean, std = 0, 1  # Moyenne et \u00e9cart-type\np = norm.pdf(0, mean, std)  # Densit\u00e9 de probabilit\u00e9 en 0\nprint(p)\n</code></pre>"},{"location":"basics/python/math_python/#32-esperance-et-variance","title":"3.2 Esp\u00e9rance et Variance","text":"<pre><code>data = np.array([1, 2, 3, 4, 5])\nprint(np.mean(data))  # Esp\u00e9rance\nprint(np.var(data))   # Variance\n</code></pre>"},{"location":"basics/python/math_python/#4-optimisation-et-descente-de-gradient","title":"4. Optimisation et Descente de Gradient","text":"<p>L'optimisation permet d'ajuster les param\u00e8tres d'un mod\u00e8le pour minimiser une fonction de co\u00fbt.</p>"},{"location":"basics/python/math_python/#41-fonction-de-cout","title":"4.1 Fonction de Co\u00fbt","text":"<pre><code>def cost_function(x):\n    return (x - 3)**2  # Fonction quadratique\n</code></pre>"},{"location":"basics/python/math_python/#42-algorithme-de-descente-de-gradient","title":"4.2 Algorithme de Descente de Gradient","text":"<pre><code>def gradient_descent(lr=0.1, epochs=10):\n    x = 0  # Initialisation\n    for _ in range(epochs):\n        grad = 2 * (x - 3)  # D\u00e9riv\u00e9e de la fonction\n        x -= lr * grad  # Mise \u00e0 jour\n        print(x)\n\ngradient_descent()\n</code></pre>"},{"location":"basics/python/math_python/#conclusion","title":"Conclusion","text":"<p>Ces bases math\u00e9matiques sont essentielles pour comprendre et impl\u00e9menter les mod\u00e8les d'intelligence artificielle. Une ma\u00eetrise de ces concepts facilite l'analyse et l'optimisation des algorithmes d'apprentissage automatique.</p>"},{"location":"basics/python/numpy/","title":"Introduction \u00e0 NumPy","text":"<p>NumPy (Numerical Python) est une biblioth\u00e8que fondamentale pour le calcul scientifique en Python. Elle permet de manipuler des tableaux de donn\u00e9es multidimensionnels et offre des fonctions math\u00e9matiques optimis\u00e9es.</p>"},{"location":"basics/python/numpy/#installation","title":"Installation","text":"<p>Pour installer NumPy, utilisez la commande suivante :</p> <pre><code>pip install numpy\n</code></pre>"},{"location":"basics/python/numpy/#importation-de-numpy","title":"Importation de NumPy","text":"<p>Avant d'utiliser NumPy, il faut l'importer :</p> <pre><code>import numpy as np\n</code></pre>"},{"location":"basics/python/numpy/#creation-de-tableaux-ndarray","title":"Cr\u00e9ation de tableaux (ndarray)","text":""},{"location":"basics/python/numpy/#a-partir-dune-liste","title":"A partir d'une liste","text":"<pre><code>arr = np.array([1, 2, 3, 4, 5])\nprint(arr)\n</code></pre>"},{"location":"basics/python/numpy/#matrice-tableau-2d","title":"Matrice (tableau 2D)","text":"<pre><code>mat = np.array([[1, 2, 3], [4, 5, 6]])\nprint(mat)\n</code></pre>"},{"location":"basics/python/numpy/#tableaux-de-zeros-de-uns-et-valeurs-arbitraires","title":"Tableaux de z\u00e9ros, de uns et valeurs arbitraires","text":"<pre><code>zeros = np.zeros((3, 3))  # Matrice 3x3 remplie de 0\nones = np.ones((2, 2))    # Matrice 2x2 remplie de 1\nrand = np.random.rand(3, 3)  # Matrice 3x3 avec valeurs al\u00e9atoires\n</code></pre>"},{"location":"basics/python/numpy/#espacements-reguliers","title":"Espacements r\u00e9guliers","text":"<pre><code>lin = np.linspace(0, 10, 5)  # 5 valeurs \u00e9quidistantes entre 0 et 10\n</code></pre>"},{"location":"basics/python/numpy/#proprietes-des-tableaux","title":"Propri\u00e9t\u00e9s des tableaux","text":"<pre><code>print(arr.shape)  # Dimensions\nprint(arr.size)   # Nombre d'\u00e9l\u00e9ments\nprint(arr.dtype)  # Type des \u00e9l\u00e9ments\n</code></pre>"},{"location":"basics/python/numpy/#manipulation-des-tableaux","title":"Manipulation des tableaux","text":""},{"location":"basics/python/numpy/#acces-aux-elements","title":"Acc\u00e8s aux \u00e9l\u00e9ments","text":"<pre><code>print(arr[0])    # Premier \u00e9l\u00e9ment\nprint(mat[1, 2]) # \u00c9l\u00e9ment \u00e0 la ligne 1, colonne 2\n</code></pre>"},{"location":"basics/python/numpy/#slicing-extraction-de-sous-tableaux","title":"Slicing (extraction de sous-tableaux)","text":"<pre><code>print(arr[1:4])    # \u00c9l\u00e9ments d'indice 1 \u00e0 3\nprint(mat[:, 1])   # Deuxi\u00e8me colonne\n</code></pre>"},{"location":"basics/python/numpy/#modification-des-valeurs","title":"Modification des valeurs","text":"<pre><code>arr[2] = 10\nmat[0, 1] = 99\n</code></pre>"},{"location":"basics/python/numpy/#operations-mathematiques","title":"Op\u00e9rations math\u00e9matiques","text":"<pre><code>arr2 = np.array([10, 20, 30, 40, 50])\nprint(arr + arr2)  # Addition\nprint(arr * 2)     # Multiplication scalaire\nprint(np.sqrt(arr))  # Racine carr\u00e9e\nprint(np.exp(arr))   # Exponentielle\n</code></pre>"},{"location":"basics/python/numpy/#fonctions-utiles","title":"Fonctions utiles","text":"<pre><code>print(np.sum(arr))   # Somme des \u00e9l\u00e9ments\nprint(np.mean(arr))  # Moyenne\nprint(np.max(arr))   # Valeur max\nprint(np.min(arr))   # Valeur min\nprint(np.argmax(arr)) # Indice de la valeur max\nprint(np.argmin(arr)) # Indice de la valeur min\n</code></pre>"},{"location":"basics/python/numpy/#reshape-et-transposition","title":"Reshape et transposition","text":"<pre><code>reshaped = arr.reshape((5, 1))  # Changement de forme\ntransposed = mat.T  # Transposition\n</code></pre>"},{"location":"basics/python/numpy/#produit-matriciel","title":"Produit matriciel","text":"<pre><code>mat1 = np.array([[1, 2], [3, 4]])\nmat2 = np.array([[5, 6], [7, 8]])\nproduct = np.dot(mat1, mat2)  # Produit matriciel\n</code></pre>"},{"location":"basics/python/numpy/#conclusion","title":"Conclusion","text":"<p>NumPy est une biblioth\u00e8que tr\u00e8s puissante pour le calcul num\u00e9rique. Son utilisation est essentielle en science des donn\u00e9es, en apprentissage automatique et en analyse scientifique.</p> <p>*Fait \u00e0 90% avec ChatGPT car il est beaucoup plus rapide que moi</p>"},{"location":"blog/","title":"Blog","text":""},{"location":"blog/2024/08/05/chatbot-memory/","title":"ChatBot Memory","text":"<p>Nous pr\u00e9sentons ici une approche pour la gestion de la m\u00e9moire \u00e0 court terme dans les chatbots, en utilisant une combinaison de techniques de stockage et de r\u00e9sum\u00e9 automatique pour optimiser le contexte conversationnel. La m\u00e9thode introduite repose sur une structure de m\u00e9moire dynamique qui limite la taille des donn\u00e9es tout en pr\u00e9servant les informations essentielles \u00e0 travers des r\u00e9sum\u00e9s intelligents. Cette approche permet non seulement d'am\u00e9liorer la fluidit\u00e9 des interactions mais aussi d'assurer une continuit\u00e9 contextuelle lors de longues sessions de dialogue. En outre, l'utilisation de techniques asynchrones garantit que les op\u00e9rations de gestion de la m\u00e9moire n'interf\u00e8rent pas avec la r\u00e9activit\u00e9 du chatbot.</p>"},{"location":"blog/2024/08/05/chatbot-memory/#modelisation-mathematique-de-la-gestion-des-conversations","title":"Mod\u00e9lisation Math\u00e9matique de la Gestion des Conversations","text":"<p>Dans cette section, nous formalisons math\u00e9matiquement la gestion de la m\u00e9moire de conversation dans le chatbot. La m\u00e9moire est structur\u00e9e comme une liste de paires repr\u00e9sentant les \u00e9changes entre l'utilisateur et le bot.</p>"},{"location":"blog/2024/08/05/chatbot-memory/#structure-de-la-memoire-de-conversation","title":"Structure de la M\u00e9moire de Conversation","text":"<p>La m\u00e9moire de conversation peut \u00eatre d\u00e9finie comme une liste ordonn\u00e9e de paires \\((u_i, d_i)\\), o\u00f9 \\(u_i\\) repr\u00e9sente l'entr\u00e9e utilisateur et \\(d_i\\) la r\u00e9ponse du bot pour le \\(i\\)-i\u00e8me \u00e9change. Cette liste est not\u00e9e \\(\\mathcal{C}\\) :</p> \\[ \\mathcal{C} = [(u_1, d_1), (u_2, d_2), \\ldots, (u_n, d_n)] \\] <p>o\u00f9 \\(n\\) est le nombre total d'\u00e9changes dans l'historique actuel.</p>"},{"location":"blog/2024/08/05/chatbot-memory/#mise-a-jour-de-la-memoire","title":"Mise \u00e0 Jour de la M\u00e9moire","text":"<p>Lorsqu'un nouvel \u00e9change se produit, une nouvelle paire \\((u_{n+1}, d_{n+1})\\) est ajout\u00e9e \u00e0 la m\u00e9moire. Si la taille de \\(\\mathcal{C}\\) d\u00e9passe une limite maximale pr\u00e9d\u00e9finie \\(M_{\\text{max}}\\), l'\u00e9change le plus ancien est retir\u00e9 :</p> \\[ \\mathcal{C} =  \\begin{cases}  \\mathcal{C} \\cup \\{(u_{n+1}, d_{n+1})\\}, &amp; \\text{si } |\\mathcal{C}| &lt; M_{\\text{max}} \\\\ (\\mathcal{C} \\setminus \\{(u_1, d_1)\\}) \\cup \\{(u_{n+1}, d_{n+1})\\}, &amp; \\text{si } |\\mathcal{C}| = M_{\\text{max}} \\end{cases} \\]"},{"location":"blog/2024/08/05/chatbot-memory/#comptage-des-mots","title":"Comptage des Mots","text":"<p>Pour g\u00e9rer l'espace de m\u00e9moire et d\u00e9cider quand la compression est n\u00e9cessaire, nous calculons le nombre total de mots \\(W(\\mathcal{C})\\) dans la m\u00e9moire :</p> \\[ W(\\mathcal{C}) = \\sum_{(u_i, d_i) \\in \\mathcal{C}} (|u_i| + |d_i|) \\] <p>o\u00f9 \\(|u_i|\\) et \\(|d_i|\\) sont respectivement le nombre de mots dans \\(u_i\\) et \\(d_i\\).</p>"},{"location":"blog/2024/08/05/chatbot-memory/#compression-de-la-memoire","title":"Compression de la M\u00e9moire","text":"<p>Lorsque \\(W(\\mathcal{C})\\) d\u00e9passe un seuil \\(W_{\\text{max}}\\), la m\u00e9moire est compress\u00e9e pour maintenir la pertinence du contexte. Cette compression est r\u00e9alis\u00e9e par un mod\u00e8le de r\u00e9sum\u00e9 \\(\\mathcal{S}\\), tel que BART :</p> \\[ \\mathcal{C}_{\\text{compressed}} = \\mathcal{S}(\\mathcal{C}) \\] <p>o\u00f9 \\(\\mathcal{C}_{\\text{compressed}}\\) est la version r\u00e9sum\u00e9e de la m\u00e9moire, r\u00e9duisant le nombre total de mots tout en pr\u00e9servant l'essence des interactions pass\u00e9es.</p>"},{"location":"blog/2024/08/05/chatbot-memory/#integration-dans-le-modele-de-langage","title":"Int\u00e9gration dans le Mod\u00e8le de Langage","text":"<p>Le mod\u00e8le de langage utilise le contexte compress\u00e9 pour g\u00e9n\u00e9rer des r\u00e9ponses pertinentes. Le prompt \\(P\\) utilis\u00e9 par le mod\u00e8le est construit comme suit :</p> \\[ P = f(\\mathcal{C}_{\\text{compressed}}, \\text{contexte}) \\] <p>o\u00f9 \\(\\text{contexte}\\) est le contexte suppl\u00e9mentaire r\u00e9cup\u00e9r\u00e9 \u00e0 partir d'un pipeline RAG, et \\(f\\) est une fonction de concat\u00e9nation qui pr\u00e9pare le texte pour le mod\u00e8le.</p> <p>Cette approche assure que le chatbot dispose toujours d'un contexte conversationnel \u00e0 jour, permettant des interactions plus naturelles et engageantes avec l'utilisateur.</p>"},{"location":"blog/2024/08/05/chatbot-memory/#implementation-du-code-pour-la-gestion-de-la-memoire-dun-chatbot","title":"Impl\u00e9mentation du Code pour la Gestion de la M\u00e9moire d'un Chatbot","text":"<p>Dans cette section, nous allons examiner un exemple de code en Python qui illustre la gestion de la m\u00e9moire dans un chatbot. Le code utilise PyTorch et les transformers de Hugging Face pour g\u00e9rer et compresser l'historique des conversations.</p>"},{"location":"blog/2024/08/05/chatbot-memory/#preparation-de-lenvironnement","title":"Pr\u00e9paration de l'Environnement","text":"<p>Nous commen\u00e7ons par v\u00e9rifier si un GPU est disponible, ce qui permet d'acc\u00e9l\u00e9rer le traitement si n\u00e9cessaire.</p> <pre><code>import torch\nfrom transformers import pipeline\nimport logging\n\nif torch.cuda.is_available():\n    device: int = 0\nelse:\n    device: int = -1\n\nMAX_MEMORY_SIZE: int = 2000\n</code></pre>"},{"location":"blog/2024/08/05/chatbot-memory/#definition-de-la-classe-chatbotmemory","title":"D\u00e9finition de la Classe ChatbotMemory","text":"<p>La classe ChatbotMemory g\u00e8re l'historique des conversations et effectue des op\u00e9rations de mise \u00e0 jour et de compression. Donc \u00e0 chaques fois que update_memory est appel\u00e9, le texte en m\u00e9moire est compt\u00e9 et trait\u00e9 au besoin.</p> <pre><code>class ChatbotMemory:\n    def __init__(self, conv: list = []):\n        self.conversation_history = conv\n\n    def update_memory(self, user_input: str, bot_response: str) -&gt; None:\n        self.conversation_history.append(f\"'user': {user_input}, 'bot': {bot_response}\")\n\n        if memory_counter(self.conversation_history) &gt; 1000:\n            self.conversation_history = compressed_memory(self.conversation_history)\n            logging.info(\"M\u00e9moire compress\u00e9e.\")\n\n        if len(self.conversation_history) &gt; MAX_MEMORY_SIZE:\n            self.conversation_history.pop(0)\n            logging.info(\"M\u00e9moire r\u00e9duite.\")\n        return 0\n\n    def get_memory(self):\n        return self.conversation_history\n</code></pre>"},{"location":"blog/2024/08/05/chatbot-memory/#compression-et-comptage-de-la-memoire","title":"Compression et Comptage de la M\u00e9moire","text":"<p>La fonction _get_compressed_memory utilise le mod\u00e8le BART pour r\u00e9sumer l'historique des conversations.</p> <pre><code>def _get_compressed_memory(sentence: str) -&gt; str:\n    summarizer = pipeline(\"summarization\", model=\"facebook/bart-large-cnn\", device=device)\n    summary = summarizer(sentence, max_length=50, min_length=5, do_sample=False)\n    return summary[0]['summary_text']\n</code></pre> <p>La fonction compressed_memory applique la fonction _get_compressed_memory \u00e0 chaque segment de l'historique des conversations. Pour cela nous optimisons la proc\u00e9dure en effectuant un traitement par Batch. Cette m\u00e9thode est dissoci\u00e9 de la fonction _get_compressed_memory de mani\u00e8re \u00e0 pouvoir introduire de nouvelles m\u00e9thodes de compression.</p> <pre><code>def compressed_memory(conv_hist: list) -&gt; list:\n    return [_get_compressed_memory(' '.join(conv_hist[i:i+5])) for i in range(0, len(conv_hist), 5)]\n</code></pre> <p>La fonction memory_counter compte le nombre total de mots dans l'historique. (Note qu'il pourrais \u00eatre interessant de r\u00e9aliser cette \u00e9tape avec des tokens plutot que des mots.)</p> <pre><code>def memory_counter(conv_hist: list) -&gt; int:\n    st = ''.join(conv_hist)\n    return len(st.split())\n</code></pre>"},{"location":"blog/2024/08/05/chatbot-memory/#conclusion","title":"Conclusion","text":"<p>Ce code \u00e9tablit un cadre efficace pour la gestion de la m\u00e9moire dans un chatbot, en utilisant des techniques de compression pour maintenir un contexte pertinent et en am\u00e9liorant la performance globale du syst\u00e8me. L'utilisation de mod\u00e8les de r\u00e9sum\u00e9 comme BART assure que m\u00eame lorsque la m\u00e9moire est compress\u00e9e, le contexte essentiel est pr\u00e9serv\u00e9.</p> <p>Code sur GitHub</p>"},{"location":"blog/2025/02/27/llm-integration-with-brms-business-rule-management-systems/","title":"LLM integration with BRMS (Business Rule Management Systems)","text":""},{"location":"blog/2025/02/27/llm-integration-with-brms-business-rule-management-systems/#introduction","title":"Introduction","text":"<ul> <li> <p>LLMs (Large Language Models) have revolutionized natural language processing (NLP).</p> <ul> <li>Understanding complex structures</li> </ul> </li> <li> <p>BRMS (Business Rule Management Systems) tools for managing complex business rules. </p> <ul> <li>Critical systems</li> </ul> </li> </ul>"},{"location":"blog/2025/02/27/llm-integration-with-brms-business-rule-management-systems/#but","title":"But","text":"<ul> <li> <p>LLMs are excellent at understanding and generating text, but lack the rigor to respect strict business rules (Hallucination).</p> <ul> <li>Case in point: Air Canada refund problem caused by poorly integrated chatbot.</li> </ul> <p>Airline held liable for its chatbot giving passenger bad advice - what this means for travellers - BBC</p> </li> <li> <p>BRMS too limited for interaction </p> </li> </ul>"},{"location":"blog/2025/02/27/llm-integration-with-brms-business-rule-management-systems/#benefits-of-brms-llm-integration","title":"Benefits of BRMS-LLM integration","text":"<ul> <li> <p>Increased compliance: LLM responses aligned with internal policies.</p> </li> <li> <p>Reduced errors: expert system-based decisions.</p> </li> <li> <p>Flexibility: combining the power of LLM with the rigor of BRMS. Complex reasoning</p> </li> <li> <p>Clarification of decision-making processes</p> </li> </ul>"},{"location":"blog/2025/02/27/llm-integration-with-brms-business-rule-management-systems/#architecture","title":"Architecture","text":"<p> As you can see from the image above, the chatbot uses LLM to generate responses, but for one specific case, it uses BRMS to provide an expert answer.</p> <p> The architecture works like an agent, using the BRSM as a tool to make a decision in a specific case. It is a kind of artificial intelligence agent that uses function calls.</p>"},{"location":"blog/2025/02/27/llm-integration-with-brms-business-rule-management-systems/#integration-workflow","title":"Integration workflow","text":"<p>We will describe a possible method of integrating business decision processes within a chatbot using a BRMS.</p>"},{"location":"blog/2025/02/27/llm-integration-with-brms-business-rule-management-systems/#decision-process-modeling","title":"Decision process modeling","text":"<p>The decision process in a BRMS system can be modeled as a set of logical rules and conditional actions, often represented by a directed graph or decision tree. This mathematical model can be used to formalize the various stages in the decision-making process, based on inputs (data supplied by the user) and defined business rules.</p> <p>Consider a set of rules \\(R = \\{r_1, r_2, \\dots, r_n\\}\\), where each rule \\(r_i\\) can be represented by a logical implication of the form :</p> \\[ r_i: \\text{If } C_i \\rightarrow A_i \\] <p>where \\(C_i\\) is a set of conditions (premises) and \\(A_i\\) is an action or decision to be taken if the conditions are met.</p> <p>The decision process can be described by an algorithm that sequentially evaluates each rule in order of priority \\(P(r_1) &gt; P(r_2) &gt; \\dots &gt; P(r_n)\\). For a given input \\(x\\), the decision process determines the rule \\(r_i\\) such that the conditions \\(C_i\\) are satisfied, and applies the action \\(A_i\\).</p> <p>Let's formulate this mathematically:</p> \\[ \\text{Find } r_i \\text{ such that } x \\models C_i \\text{ and apply } A_i \\] <p>where \\(x \\models C_i\\) means that \\(x\\) satisfies the conditions \\(C_i\\).</p> <p>If several rules \\(r_i\\) and \\(r_j\\) are satisfied simultaneously (i.e. \\(x \\models C_i\\) and \\(x \\models C_j\\)), then the order of priority \\(P\\) determines which action is chosen. This can be expressed as :</p> \\[ A = A_k \\text{ where } k = \\arg\\max_{i}(P(r_i) \\text{ such that } x \\models C_i) \\] <p>This model can be extended by incorporating probabilities associated with each rule, to handle scenarios where the rules are not strictly deterministic.  Finally, for integration with a wide language model (LLM), these rules can be used to filter or adjust LLM output, ensuring that any response generated conforms to predefined business rules.</p>"},{"location":"blog/2025/02/27/llm-integration-with-brms-business-rule-management-systems/#decision-process-integration-modeling","title":"Decision process integration modeling","text":"<p>Once the decision process has been modeled, we can integrate it into a chatbot.</p>"},{"location":"blog/2025/02/27/llm-integration-with-brms-business-rule-management-systems/#information-extraction","title":"Information extraction","text":"<p>First, the model extracts the relevant information from the user input text \\(x\\). Suppose the input is of the form: \"Manon's insurance, she's 34 and lives in Paris \u201d. The aim is to extract the specific information, i.e. surname \\(n\\), first name \\(p\\), age \\(a\\), and address \\(d\\). This process can be modeled by a function \\(f_{ext}\\) such that :</p> \\[ (n, p, a, d) = f_{ext}(x) \\] <p>where \\(f_{ext}\\) is an entity extraction function.</p>"},{"location":"blog/2025/02/27/llm-integration-with-brms-business-rule-management-systems/#building-the-decision-payload","title":"Building the decision payload","text":"<p>Once the information has been extracted, it is used to build a payload that will be sent to a BRMS system. The payload is a data structure represented mathematically by a vector \\(\\mathbf{v}\\) :</p> \\[ \\mathbf{v} = (n, p, a, d, \\text{ID}, \\text{Amount}) \\] <p>where \\(\\text{ID}\\) is a relevant identifier and \\(\\text{Amount}\\) is an initial value.</p>"},{"location":"blog/2025/02/27/llm-integration-with-brms-business-rule-management-systems/#business-rule-evaluation","title":"Business rule evaluation","text":"<p>The vector \\(\\mathbf{v}\\) is sent to a rules engine \\(R\\), represented by a function \\(f_{BRMS}\\) :</p> \\[ \\text{Decision} = f_{BRMS}(\\mathbf{v}) \\] <p>where decision is the BRMS output after rule evaluation.</p>"},{"location":"blog/2025/02/27/llm-integration-with-brms-business-rule-management-systems/#validation-and-response","title":"Validation and Response","text":"<p>Finally, the decision is validated and a response is constructed:</p> \\[ \\text{Response} = f_{resp}(\\text{Decision}) \\] <p>If an error is detected:</p> \\[ \\text{Error} = f_{err}(\\text{Decision}) \\]"},{"location":"blog/2025/02/27/llm-integration-with-brms-business-rule-management-systems/#process-summary","title":"Process summary","text":"\\[ (n, p, a, d) \\xrightarrow{f_{ext}} \\mathbf{v} \\xrightarrow{f_{BRMS}} \\text{Decision} \\xrightarrow{f_{resp}} \\text{Response} \\]"},{"location":"blog/2025/02/27/llm-integration-with-brms-business-rule-management-systems/#integration-proposal","title":"Integration Proposal","text":""},{"location":"blog/2025/02/27/llm-integration-with-brms-business-rule-management-systems/#api-integration","title":"API integration","text":"<pre><code>def payload_construction(nom:str,prenom:str,age:int,adresse:str, maisonPrice:int, sinistre:str = \"Incendie\"):\n\n    payload = {\n        \"personne\": {\n            \"name\": prenom,\n            \"lastName\": nom,\n            \"address\": adresse,\n            \"disaster\": sinistre,\n            \"age\": age,\n            \"maisonPrice\": maisonPrice\n            }\n        }\n\n    return payload\n</code></pre>"},{"location":"blog/2025/02/27/llm-integration-with-brms-business-rule-management-systems/#extract-information-from-user-input","title":"Extract information from user input","text":"<pre><code>def brmsCall(user_input:str)-&gt;str:\n    request = (\n                \"Prompt + few shot learning: \"\n\n                \"Voici la phrase cible: \" f\"{user_input}\"\n                )\n\n    elements = ollama.generate(\n        model=\"mistral:latest\",\n        prompt=request,\n        stream=False,\n        options= {'temperature': 1}\n    )\n    elements2 = re.sub(r'[^a-zA-Z0-9;]', '', elements[\"response\"])\n    elements3 = [elem.strip() for elem in elements2.split(';') if elem.strip()]\n\n    payload = pc.payload_construction(\n        nom=elements3[0] if len(elements3) &gt; 0 and elements3[0] else None,\n        prenom=elements3[1] if len(elements3) &gt; 1 and elements3[1] else None,\n        age=extract_number(elements3[2]) if len(elements3) &gt; 2 and elements3[2] else None,\n        adresse=extract_number(elements3[3]) if len(elements3) &gt; 3 and elements3[3] else None,\n        maisonPrice= extract_number(elements3[4]) if len(elements3) &gt; 4 and elements3[4] else None\n    )\n\n    api = ap.ApiCall(url=\"http://localhost:8080/ruleflow\", payload=payload, headers={'Content-Type': 'application/json'})\n    test_completion, erreur = api.test_arguments()\n\n    if erreur:\n        sentence = \"Tu dois indiquer \u00e0 ton interlocuteur que tu ne peux pas r\u00e9pondre pour la raison suivante : \", test_completion, \"Il dois ip\u00e9rativement te donner toutes les informations dans l'ordre si possible. \\n\\n R\u00e9pond uniquement que tu ne peux pas r\u00e9pondre sans ces informations primordiales! Aide toi des raisons donn\u00e9es pour expliquer. \\n\\n\"\n        solve = False\n    else:\n\n        resApi:dict = api.call_api()  # Appel API\n\n        if isinstance(resApi, dict) and 'res' in resApi:\n            answer = resApi['res'].get('montantIndemnisation', \"Indemnisation inconnue\")\n        else:\n            answer = \"Erreur : r\u00e9ponse invalide de l'API\"\n\n        sentence = f\"D'apr\u00e8s les informations renseign\u00e9es parl'utilisateur, le prix de l'indemnit\u00e9 calcul\u00e9e par le mod\u00e8le est : {answer}\"\n        solve = isinstance(resApi, dict) and 'res' in resApi  # True si la cl\u00e9 'res' est bien pr\u00e9sente\n\n    print(f\"solve : {solve}\")\n\n    return sentence, elements3, solve\n</code></pre>"},{"location":"blog/2025/02/27/llm-integration-with-brms-business-rule-management-systems/#keeping-information-in-memory","title":"Keeping information in memory","text":"<pre><code>if self.assurance_phase:\n    assurance_output = \"Voici le retour du syst\u00e8me expert :\n\" + sentence\n    if solve_statue:\n        self.memoire_contextuel_assurance = \"\"\n    else:\n        self.memoire_contextuel_assurance = f\"Ces \u00e9l\u00e9ments sont \u00e0 retenir : {liste_element}\"\nelse:\n    assurance_output = \"\"\n    self.memoire_contextuel_assurance = \"\"\n</code></pre>"},{"location":"blog/2025/02/27/llm-integration-with-brms-business-rule-management-systems/#demo","title":"Demo","text":"<p>This demo is in french :</p> <p>All the code is available on Github:</p> <ul> <li> <p>BRMS part</p> </li> <li> <p>Chatbot part</p> </li> </ul>"},{"location":"blog/2024/06/21/s%C3%A9curit%C3%A9-de-vos-codes/","title":"S\u00e9curit\u00e9 de vos codes","text":"<p>La s\u00e9curit\u00e9 avec Bandit, un outil d'analyse de s\u00e9curit\u00e9 de code pour Python.</p> <p>\ud83d\udd0d Pourquoi Bandit ?</p> <p>Analyse automatique : Bandit passe en revue votre code pour d\u00e9tecter les usages courants qui peuvent \u00eatre dangereux pour la s\u00e9curit\u00e9.</p> <p>Int\u00e9gration facile : S'int\u00e8gre dans vos pipelines CI/CD pour des contr\u00f4les de s\u00e9curit\u00e9 continus.</p> <p>Mettre en place Bandit est aussi simple que:</p> <pre><code>\u200bpip install bandit\nbandit -r your_code.py\u200b\n</code></pre> <p>Ajouter \u00e0 un pipeline GitHub Action, \u00e0 la suite des tests unitaires:</p> <pre><code>\u200bname: Security check\u200b\n\u200brun: bandit -r your_code.py\n</code></pre> <p>Vous pouvez aussi l'int\u00e9grer dans un nouveau workflows en ajoutant un nouveau fichier .yml.</p> <p>Jetez un \u0153il \u00e0 l'image jointe pour voir Bandit en action dans un workflow GitHub Actions. Aucune vuln\u00e9rabilit\u00e9 trouv\u00e9e, c'est exactement ce que nous voulons voir !</p> <p></p> <p>Avec Bandit, votre code est surveill\u00e9 pour \u00e9viter les erreurs courantes qui pourraient le compromettre et ce \u00e0 chaque push ! C'est super pratique et cela doit devenir une habitude.</p>"},{"location":"blog/2024/04/21/la-documentation-technique-et-sphinx/","title":"La documentation technique et Sphinx","text":"<p>Ici, je ne vous parlerai pas du README (qui est un guide rapide), mais plut\u00f4t de la documentation technique.</p> <p>Une documentation claire et accessible est aussi cruciale que le code lui-m\u00eame. Elle guide les utilisateurs et les contributeurs, facilitant l'utilisation et la contribution au projet.</p> <p>Voici comment structurer et publier une documentation d'un projet Python, en utilisant Sphinx pour la g\u00e9n\u00e9ration et Read the Docs pour l'h\u00e9bergement.</p> <ol> <li>Structuration du Projet \ud83d\udcc2 </li> </ol> <p> La premi\u00e8re \u00e9tape est d'organiser le projet en suivant les meilleures pratiques, avec des dossiers distincts pour les sources (src/), les tests (tests/), la documentation (docs/) et le script setup.py. Cette structure claire facilite la navigation et la maintenance du projet. (Je ferai un post sur toute cette partie.) </p> <ol> <li>G\u00e9n\u00e9ration de Documentation avec Sphinx \ud83d\udcd6</li> </ol> <p>Sphinx transforme les docstrings en une documentation compl\u00e8te et bien format\u00e9e.</p> <p>Nous utilisons des extensions comme autodoc pour g\u00e9n\u00e9rer automatiquement la documentation \u00e0 partir des docstrings.</p> <p>1/ Nous installons Sphinx :</p> <pre><code>pip install sphinx\n</code></pre> <p>2/ Nous cr\u00e9ons les dossiers d'initialisation :</p> <pre><code>sphinx-quickstart docs\n</code></pre> <p>3/ Nous nous d\u00e9pla\u00e7ons dans docs et nous cr\u00e9ons la documentation :</p> <pre><code>cd docs\nmake html\n</code></pre> <p>Nous pouvons supprimer la documentation avec :  <code>zsh make clean</code></p> <ol> <li>Configuration pour Read the Docs \ud83c\udf10</li> </ol> <p> Avec un fichier .readthedocs.yaml, nous configurons le processus de build sur Read the Docs, en sp\u00e9cifiant la version de Python et les d\u00e9pendances n\u00e9cessaires. Une fois cela fait, rendez-vous sur ReadTheDoc et s\u00e9lectionnez le repo contenant votre projet. Cela assure que la documentation est automatiquement mise \u00e0 jour et accessible en ligne \u00e0 chaque commit. (Vous trouverez un exemple dans l'image de ce post.) </p> <p>Le r\u00e9sultat ? Une documentation en ligne toujours \u00e0 jour, facilement accessible par les utilisateurs et les contributeurs.</p> <p> La documentation ne doit jamais \u00eatre une r\u00e9flexion apr\u00e8s coup dans le d\u00e9veloppement logiciel. Elle est essentielle pour la transparence, l'accessibilit\u00e9 et la r\u00e9ussite \u00e0 long terme d'un projet. <p>"},{"location":"blog/2025/02/28/introduction-to-threshold-logic-unit-tlu-biology-mathematics-and-python-implementation/","title":"Introduction to Threshold Logic Unit (TLU): Biology, Mathematics, and Python Implementation","text":""},{"location":"blog/2025/02/28/introduction-to-threshold-logic-unit-tlu-biology-mathematics-and-python-implementation/#introduction","title":"Introduction","text":"<p>Artificial intelligence and neural networks are inspired by biological neurons. One of the simplest artificial neuron models is the Threshold Logic Unit (TLU), which forms the foundation of perceptrons and modern deep learning architectures. In this post, we will explore the biological origins, mathematical formulation, and a practical Python implementation of the TLU. That's a great starting point to understand artificial neurons and the foundation of deep learning. Don't be afraid by the complexity, it's a great place to start.</p>"},{"location":"blog/2025/02/28/introduction-to-threshold-logic-unit-tlu-biology-mathematics-and-python-implementation/#biological-inspiration","title":"Biological Inspiration","text":"<p>The TLU is inspired by the behavior of biological neurons. A neuron in the human brain receives inputs from other neurons through synapses. If the combined signal exceeds a certain threshold, the neuron fires and sends a signal to the next neuron.</p> <p>In simple terms:</p> <ul> <li> <p>Neurons receive input signals.</p> </li> <li> <p>Each input is weighted based on its importance.</p> </li> <li> <p>If the weighted sum of inputs exceeds a threshold, the neuron activates.</p> </li> </ul> <p>This is a binary activation system, where the neuron either fires (<code>1</code>) or remains inactive (<code>0</code>).</p> <p></p> <ul> <li>\\((a)\\) : Biological Neuron</li> <li>\\((b)\\) : Artificial Neuron</li> </ul>"},{"location":"blog/2025/02/28/introduction-to-threshold-logic-unit-tlu-biology-mathematics-and-python-implementation/#mathematical-model","title":"Mathematical Model","text":"<p>A Threshold Logic Unit (TLU) is mathematically defined as:</p> \\[     y = f(w_1 x_1 + w_2 x_2 + \\dots + w_n x_n - \\theta) \\] <p>where: - \\( x_i \\) are the input values. - \\( w_i \\) are the corresponding weights. - \\( \\theta \\) is the threshold. - \\( f(z) \\) is the step activation function:</p> \\[     f(z) = \\begin{cases}        1 &amp; \\text{if } z \\geq 0 \\\\       0 &amp; \\text{otherwise}     \\end{cases} \\] <p>This function determines whether the neuron fires (<code>1</code>) or stays inactive (<code>0</code>).</p>"},{"location":"blog/2025/02/28/introduction-to-threshold-logic-unit-tlu-biology-mathematics-and-python-implementation/#python-implementation","title":"Python Implementation","text":"<p>Let's implement a simple Threshold Logic Unit (TLU) in Python.</p> <pre><code>import numpy as np\n\ndef step_function(x):\n    return 1 if x &gt;= 0 else 0\n\ndef TLU(inputs, weights, threshold):\n    weighted_sum = np.dot(inputs, weights) - threshold\n    return step_function(weighted_sum)\n\n# Example usage:\ninputs = np.array([1, 0, 1])   # Binary inputs\nweights = np.array([0.5, 0.5, 0.5])  # Weight vector\nthreshold = 0.7\n\noutput = TLU(inputs, weights, threshold)\nprint(f\"TLU Output: {output}\")\n</code></pre>"},{"location":"blog/2025/02/28/introduction-to-threshold-logic-unit-tlu-biology-mathematics-and-python-implementation/#explanation","title":"Explanation:","text":"<ol> <li>The <code>step_function(x)</code> returns <code>1</code> if <code>x</code> is greater than or equal to zero, otherwise <code>0</code>.</li> <li>The <code>TLU(inputs, weights, threshold)</code> computes the weighted sum, subtracts the threshold, and applies the step function.</li> <li>We test it with a simple example where <code>inputs = [1, 0, 1]</code>, <code>weights = [0.5, 0.5, 0.5]</code>, and <code>threshold = 0.7</code>.</li> </ol>"},{"location":"blog/2025/02/28/introduction-to-threshold-logic-unit-tlu-biology-mathematics-and-python-implementation/#visualization-of-decision-boundary","title":"Visualization of Decision Boundary","text":"<p>A TLU is a linear classifier, meaning it can separate data with a straight decision boundary. Let's visualize this boundary using Matplotlib.</p> <pre><code>import matplotlib.pyplot as plt\n\ndef plot_tlu_decision_boundary(weight, threshold):\n    x = np.linspace(-2, 2, 100)\n    y = (-weight[0] * x + threshold) / weight[1]\n    plt.plot(x, y, label=\"Decision Boundary\")\n    plt.axhline(0, color='gray', linestyle='--')\n    plt.axvline(0, color='gray', linestyle='--')\n    plt.xlim(-2, 2)\n    plt.ylim(-2, 2)\n    plt.xlabel(\"x1\")\n    plt.ylabel(\"x2\")\n    plt.legend()\n    plt.title(\"TLU Decision Boundary\")\n    plt.show()\n\n# Example decision boundary\nweights = np.array([0.5, -0.5])\nthreshold = 0.2\nplot_tlu_decision_boundary(weights, threshold)\n</code></pre>"},{"location":"blog/2025/02/28/introduction-to-threshold-logic-unit-tlu-biology-mathematics-and-python-implementation/#limitations-of-tlu","title":"Limitations of TLU","text":"<p>While the Threshold Logic Unit is a fundamental concept, it has limitations: - It can only solve linearly separable problems (like AND and OR logic gates). - It fails for problems like XOR, which are not linearly separable. - More advanced models like Perceptrons and Multi-Layer Neural Networks extend this idea by using different activation functions and multiple layers.</p>"},{"location":"blog/2025/02/28/introduction-to-threshold-logic-unit-tlu-biology-mathematics-and-python-implementation/#conclusion","title":"Conclusion","text":"<p>The TLU is a great starting point to understand artificial neurons and the foundation of deep learning. Even though modern neural networks use non-linear activation functions like sigmoid, ReLU, and tanh, understanding TLU provides fundamental insights into how neurons process information.</p> <p>In future posts, we will extend this idea to Perceptrons and Neural Networks.</p>"},{"location":"blog/2025/02/28/introduction-to-threshold-logic-unit-tlu-biology-mathematics-and-python-implementation/#references","title":"References","text":"<ul> <li>Rosenblatt, F. (1958). The Perceptron: A Probabilistic Model for Information Storage and Organization in the Brain.</li> <li>McCulloch, W. S., &amp; Pitts, W. (1943). A logical calculus of the ideas immanent in nervous activity.</li> </ul>"},{"location":"blog/2024/06/21/automatisation-des-tests/","title":"Automatisation des Tests","text":"<p>Vous le savez (enfin j'esp\u00e8re), les tests sont cruciaux pour tous les projets de d\u00e9veloppement. Mais les ex\u00e9cuter manuellement \u00e0 chaque fois ? Pas tr\u00e8s 2024 ! \ud83e\udd16</p> <p>Voici une astuce pour les d\u00e9veloppeurs soucieux d'efficacit\u00e9 : l'int\u00e9gration de Pytest avec GitHub Actions.</p> <p>Pytest est un framework de test pour vos applications Python. Et quand vous combinez cela avec la puissance des GitHub Actions, vous obtenez une suite de tests automatis\u00e9s qui s'ex\u00e9cutent \u00e0 chaque push ou pull request, assurant que vos modifications n'introduisent pas de r\u00e9gressions !</p> <p>Pour configurer une action de base GitHub et ex\u00e9cuter vos tests Pytest, cr\u00e9ez un fichier <code>.github/workflows/python-app.yml</code>\u200b dans votre repo et ajouter votre configuration comme sur mon exemple en photo.</p> <p></p> <p>\ud83d\ude80 Et voil\u00e0 ! Vos tests se lancent automatiquement, vous offrant une tranquillit\u00e9 d'esprit.</p> <p>Je suis persuad\u00e9 que certains d'entre vous utilisent d'autres techniques ou des outils plus performants pour les tests, l'essentiel \u00e9tant de toujours pr\u00e9venir son code de toutes formes de r\u00e9gression !</p>"},{"location":"projets/","title":"Projets","text":""},{"location":"blog/archive/2025/","title":"2025","text":""},{"location":"blog/archive/2024/","title":"2024","text":""},{"location":"blog/category/tlu/","title":"TLU","text":""},{"location":"blog/category/biology/","title":"Biology","text":""},{"location":"blog/category/mathematics/","title":"Mathematics","text":""},{"location":"blog/category/python/","title":"Python","text":""},{"location":"blog/category/artificial-intelligence/","title":"Artificial Intelligence","text":""},{"location":"blog/category/machine-learning/","title":"Machine Learning","text":""},{"location":"blog/category/from-scratch/","title":"From Scratch","text":""},{"location":"blog/category/neural-networks/","title":"Neural Networks","text":""},{"location":"blog/category/deep-learning/","title":"Deep Learning","text":""},{"location":"blog/category/perceptrons/","title":"Perceptrons","text":""},{"location":"blog/category/brms/","title":"BRMS","text":""},{"location":"blog/category/llm/","title":"LLM","text":""},{"location":"blog/category/chatbot/","title":"Chatbot","text":""},{"location":"blog/category/expert-system/","title":"Expert System","text":""},{"location":"blog/category/nlp/","title":"NLP","text":""},{"location":"blog/category/memory/","title":"Memory","text":""},{"location":"blog/category/devops/","title":"DevOps","text":""},{"location":"blog/category/security/","title":"Security","text":""},{"location":"blog/category/testing/","title":"Testing","text":""}]}